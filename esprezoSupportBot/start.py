import logging
import sys
from telegram import Update, ParseMode
from telegram.ext import CallbackContext, ConversationHandler

import validators
import googlesheets
import menu


logger = logging.getLogger(__name__)
logging.basicConfig(stream=sys.stdout, level=logging.INFO)


UID, NAME, MAIL = range(3)

def start(update: Update, context: CallbackContext) -> NAME:
	uid =  update.message.from_user.id
	if googlesheets.check_id_duplication(uid) == 0:
		update.message.reply_text('–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω(–∞)! ‚ò∫')
		return ConversationHandler.END
	update.message.reply_text('–ö–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –±–æ—Ç –æ–±—Ä–∞—â–∞–ª—Å—è –∫ —Ç–µ–±–µ? –í–≤–µ–¥–∏ –∏–º—è –∏–ª–∏ –ø—Ä–æ–∑–≤–∏—â–µ:')
	context.user_data[UID] = uid
	return (NAME)

## -- –†–ï–ì–ï–°–¢–†–ê–¶–ò–Ø --
def name_handler(update: Update, context: CallbackContext) -> MAIL:
	# –ø–æ–ª—É—á–∏—Ç—å –∏–º—è
	context.user_data[NAME] = update.message.text
	logger.info('user_data: %s', context.user_data)

	# —Å–ø—Ä–æ—Å–∏—Ç—å –ø–æ—á—Ç—É
	update.message.reply_text('–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ—á—Ç—É, —á—Ç–æ–±—ã –º—ã –∑–Ω–∞–ª–∏, –∫—Ç–æ —Ç—ã üôÉ')
	return (MAIL)


def mail_handler(update: Update, context: CallbackContext):
	# –ø–æ–ª—É—á–∏—Ç—å –ø–æ—á—Ç—É
	mail = validators.mail_validator(text = update.message.text)
	if mail == -1:
		update.message.reply_text('–£–ø—Å, –∫–∞–∂–µ—Ç—Å—è, —ç—Ç–æ –Ω–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π e-mail esprezo. –ü—Ä–æ–≤–µ—Ä—å, –≤—Å—ë –ª–∏ –≤–µ—Ä–Ω–æ?')
		return (MAIL)
	if googlesheets.check_mail_duplication(update.message.text) == 0:
		update.message.reply_text('–≠—Ç–æ—Ç –ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n–ï—Å–ª–∏ —ç—Ç–æ —Ç–≤–æ–π e-mail, –∏ —Ç—ã –µ—â—ë –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª(–∞) —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ @vlatskaya. –û–Ω–∞ —Å–æ –≤—Å–µ–º —Ä–∞–∑–±–µ—Ä—ë—Ç—Å—è. üí™')
		return (MAIL)
	context.user_data[MAIL] = update.message.text
	logger.info('user_data: %s', context.user_data)
	googlesheets.start_register(context.user_data)
	update.message.reply_text('–°—É–ø–µ—Ä! –ü–æ–µ—Ö–∞–ª–∏ –≤–≤–æ–¥–∏—Ç—å –∑–∞–±–æ—Ç—É –æ —Å–µ–±–µ –≤ –ø—Ä–∏–≤—ã—á–∫—É! üöÄ')
	update.message.reply_text(menu.MENU_TEXT ,parse_mode = ParseMode.HTML, reply_markup = menu.get_menu_inline_keyboard())
	context.user_data.clear()
	return ConversationHandler.END
